{% extends 'base.html.twig' %}

{% block title %}Créer Nouvelle Ordonnance{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.jsdelivr.net/npm/daisyui@3.1.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com"></script>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/dayjs@1.11.10/dayjs.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/dayjs@1.11.10/locale/fr.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/dayjs@1.11.10/plugin/updateLocale.js"></script>
{% endblock %}

{% block body %}
<body class="bg-orange-500 dark:bg-black">
  <header class="text-gray-400 bg-orange-400 dark:bg-black dark:border-b sticky top-0 left-0 right-0 w-full z-50">
    <div class="max-w-screen-xl mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center">
      <a href="{{ path('app_home') }}" class="flex title-font font-medium items-center text-white mb-4 md:mb-0">
        <span class="ml-3 text-2xl">Piluleo</span>
      </a>
      <nav class="md:ml-auto md:mr-auto flex flex-wrap items-center text-base justify-center">
      </nav>
    
      <div class="flex justify-end ml-4 md:ml-14 boutonDarkMode">
        <label class="swap swap-rotate">
          <input type="checkbox" class="theme-controller" value="dark" />
          <svg class="swap-on fill-current w-10 h-10 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z"/>
          </svg>
          <svg class="swap-off fill-current w-10 h-10 text-white" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z"/>
          </svg>
        </label>
      </div>
    </div>
  </header>

  <section class="min-h-screen bg-orange-500 dark:bg-black flex flex-col items-center justify-center p-4">
    <div class="w-full max-w-4xl bg-orange-500 dark:bg-black rounded-lg border border-black dark:border-white p-8">
      <h1 class="text-xl font-bold text-white mb-4 text-center dark:text-white current-time"></h1>
      <h2 class="text-3xl font-bold text-white mb-10 text-center dark:text-white">Créer nouvelle ordonnance</h2>
      
      {{ form_start(form, {'attr': {'id': 'inscriptionForm', 'class': 'grid grid-cols-2 gap-4'}}) }}
        {{ form_widget(form.idOrdonnance, {'attr': {'class': 'col-span-2 p-3 rounded text-lg dark:text-white font-bold', 'placeholder': 'Id Ordonnance'}}) }}
        {{ form_widget(form.posologie, {'attr': {'class': 'col-span-2 p-3 rounded text-lg dark:text-white font-bold', 'placeholder': 'Posologie'}}) }}
        {{ form_widget(form.frequence, {'attr': {'class': 'col-span-2 p-3 rounded text-lg dark:text-white font-bold', 'placeholder': 'Fréquence'}}) }}
        
        {# Ajoutez ces champs si ils existent dans votre formulaire, sinon vous pouvez les omettre #}
        {% if form.patient is defined %}
            {{ form_widget(form.patient, {'attr': {'class': 'col-span-2 p-3 rounded text-lg dark:text-white font-bold'}}) }}
        {% endif %}
        {% if form.pilulier is defined %}
            {{ form_widget(form.pilulier, {'attr': {'class': 'col-span-2 p-3 rounded text-lg dark:text-white font-bold'}}) }}
        {% endif %}
        
        <div class="col-span-2 flex justify-center">
          <button type="submit" class="bg-black dark:bg-white text-white dark:text-black font-bold py-3 px-6 w-40 rounded text-xl">
            Valider
          </button>
        </div>
      {{ form_end(form) }}
      <p class="text-xl font-bold text-white mt-5 text-center dark:text-white js-texte"></p>
    </div>
  </section>

  <script>
    tailwind.config = {
        darkMode: "class",
        theme: {
            extend: {
                backgroundColor: {
                    dark: "black",
                },
            },
        },
    };
    
    document.addEventListener("DOMContentLoaded", function () {
        document
            .querySelector(".theme-controller")
            .addEventListener("change", function () {
                if (this.checked) {
                    document.documentElement.classList.add("dark");
                    document.documentElement.setAttribute("data-theme", "black");
                } else {
                    document.documentElement.classList.remove("dark");
                    document.documentElement.setAttribute("data-theme", "light");
                }
            });

        dayjs.locale('fr');
        dayjs.extend(window.dayjs_plugin_updateLocale);
        dayjs.updateLocale('fr', {
            formats: {
                LLL: 'dddd D MMMM YYYY'
            }
        });

        function updateTime() {
            const date = dayjs();
            const currentTimeElement = document.querySelector('.current-time');
            if (currentTimeElement) {
                currentTimeElement.innerHTML = `
                    <span class="date">${date.format('dddd D MMMM YYYY, HH:mm:ss').toUpperCase()}</span>
                `;
            }
        }

        setInterval(updateTime, 1000);
        updateTime();
    });
  </script>
</body>
{% endblock %}